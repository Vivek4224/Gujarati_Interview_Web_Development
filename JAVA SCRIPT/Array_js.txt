1. JavaScript માં Array શું છે?
Array એ એક ડેટા સ્ટ્રક્ચર છે જેનો ઉપયોગ એક જ variable માં અનેક values સંગ્રહ કરવા માટે થાય છે. આ values કોઈપણ ડેટા ટાઈપની હોઈ શકે છે.


const arr = [1, "apple", true];




2. How do you create an array in JavaScript? 
તમે JavaScript માં એરે બે રીતે બનાવી શકો છો:  
1. Array literal syntax નો ઉપયોગ કરીને:  
   
   const arr = [1, 2, 3];

2. `Array` constructor નો ઉપયોગ કરીને:  
   
   const arr = new Array(1, 2, 3);
   


3. How do you access elements in an array?
ઇન્ડેક્સનો ઉપયોગ કરો, જે 0 થી શરૂ થાય છે:  

const arr = [10, 20, 30];  
console.log(arr[1]); // 20



4. How do you add an element to an array? 
1. `push()` નો ઉપયોગ કરીને અંતે એલીમેન્ટ ઉમેરો:  
   
   arr.push(4); // Adds 4 at the end
     
2. `unshift()` નો ઉપયોગ કરીને શરૂઆતમાં એલીમેન્ટ ઉમેરો:  
   
   arr.unshift(0); // Adds 0 at the beginning


5. How do you remove elements from an array?
1. `pop()` નો ઉપયોગ કરીને અંતે એલીમેન્ટ કાઢો:  
   
   arr.pop(); // Removes the last element
 
2. `shift()` નો ઉપયોગ કરીને શરૂઆતમાંથી એલીમેન્ટ કાઢો:  
   
   arr.shift(); // Removes the first element



6. How do you find the length of an array? 
`length` પ્રોપર્ટીનો ઉપયોગ કરો:  

const arr = [1, 2, 3];  
console.log(arr.length); // 3



7. What is the `splice()` method? 
આ એરેમાં એલીમેન્ટ્સને ઉમેરવા, કાઢવા અથવા બદલીને એક નવી એરે બનાવે છે.  

const arr = [1, 2, 3, 4];  
arr.splice(1, 2, "a", "b"); // [1, "a", "b", 4]



8. What is the `slice()` method?  
આ એરેના એક ભાગની shallow copy બનાવે છે.  

const arr = [1, 2, 3, 4];  
console.log(arr.slice(1, 3)); // [2, 3]



9. How do you find if an element exists in an array?  
1. `includes()` નો ઉપયોગ કરીને:  

   arr.includes(2); // true or false
  
2. `indexOf()` નો ઉપયોગ કરીને:  
   
   arr.indexOf(2); // Returns index or -1 if not found



10. `map()` method શું છે?
`map()` method એ એક નવું એરે બનાવે છે જે દરેક એલીમેન્ટ પર ફંક્શનને લાગુ કરીને તૈયાર થાય છે.  

const arr = [1, 2, 3];  
const doubled = arr.map(x => x * 2); // [2, 4, 6]



11. What is the `filter()` method?  
આ એરેના એલીમેન્ટ્સમાંથી એવા એલીમેન્ટ્સ પસંદ કરે છે જે એક કન્ડીશન પોરી કરે છે અને તેમાંથી એક નવી એરે બનાવે છે.  

const arr = [1, 2, 3, 4];  
const evens = arr.filter(x => x % 2 === 0); // [2, 4]


12. What is the `reduce()` method?
આ એરેને એક સિંગલ વેલ્યુમાં ઘટાડે છે જે ફંક્શનને લગી ઈટિવલી લાગુ કરીને પ્રાપ્ત થાય છે.  

const arr = [1, 2, 3];  
const sum = arr.reduce((acc, curr) => acc + curr, 0); // 6



13. How do you sort an array?  
`sort()` method નો ઉપયોગ કરો:  

const arr = [3, 1, 2];  
arr.sort(); // [1, 2, 3]
  
અથવા, નંબર્સ માટે કોમ્પેરેટરનો ઉપયોગ કરો:  

arr.sort((a, b) => a - b);



14. How do you reverse an array? 
`reverse()` method નો ઉપયોગ કરો:  

const arr = [1, 2, 3];  
arr.reverse(); // [3, 2, 1]



15. How do you concatenate two arrays?  
`concat()` method નો ઉપયોગ કરો:  

const arr1 = [1, 2];  
const arr2 = [3, 4];  
const combined = arr1.concat(arr2); // [1, 2, 3, 4]


16. How do you flatten a nested array?  
`flat()` method નો ઉપયોગ કરો:  

const arr = [1, [2, [3, 4]]];  
console.log(arr.flat(2)); // [1, 2, 3, 4]



17. How do you convert an array to a string? 
`join()` method નો ઉપયોગ કરો:  

const arr = [1, 2, 3];  
console.log(arr.join("-")); // "1-2-3"



18. How do you find the index of an element in an array? 
`indexOf()` method નો ઉપયોગ કરો:  

const arr = [1, 2, 3];  
console.log(arr.indexOf(2)); // 1



19. What is the `find()` method?
આ method એ એલીમેન્ટને પાછું આપે છે જે કન્ડીશન પોરી કરે છે.  

const arr = [1, 2, 3];  
const result = arr.find(x => x > 1); // 2



20. What is the `findIndex()` method?  
આ method એ એલીમેન્ટના એન્ડેક્સને પાછું આપે છે જે કન્ડીશન પોરી કરે છે.  

const arr = [1, 2, 3];  
const result = arr.findIndex(x => x > 1); // 1



21. How do you check if all elements satisfy a condition?
`every()` method નો ઉપયોગ કરો:  

const arr = [1, 2, 3];  
arr.every(x => x > 0); // true



22. How do you check if some elements satisfy a condition?
`some()` method નો ઉપયોગ કરો:  

const arr = [1, 2, 3];  
arr.some(x => x > 2); // true



23. How do you create an array with a specific length?  
`Array` constructor નો ઉપયોગ કરો:  

const arr = new Array(5); // Creates an array with 5 empty slots



24. What is the `fill()` method?  
આ method એરેના તમામ એલીમેન્ટ્સને એક fixed value થી ભરે છે.  

const arr = new Array(3).fill(0); // [0, 0, 0]



25. How do you iterate over an array?  
`for` loop, `for...of`, અથવા `forEach()` નો ઉપયોગ કરી શકો છો:  

const arr = [1, 2, 3];  
arr.forEach(x => console.log(x));



26. What is the difference between `forEach()` and `map()`? 
- `forEach()` દરેક એલીમેન્ટ પર ફંક્શન ચલાવે છે પરંતુ નવું એરે પરત આપતું નથી.  
- `map()` દરેક એલીમેન્ટ પર ફંક્શન ચલાવે છે અને નવું એરે પરત આપે છે.


27. How do you remove duplicates from an array?
`Set` નો ઉપયોગ કરો:  

const arr = [1, 2, 2, 3];  
const unique = [...new Set(arr)]; // [1, 2, 3]



28. How do you copy an array?  
1. Spread operator નો ઉપયોગ કરીને:  
   
   const copy = [...arr];
     
2. `slice()` method નો ઉપયોગ કરીને:  
   
   const copy = arr.slice();
 


29. How do you check if a variable is an array?
`Array.isArray()` નો ઉપયોગ કરો:  

Array.isArray(arr); // true



30. What is a multidimensional array?
આ એરે છે જેમાં બીજી એરે હોય છે:  

const arr = [[1, 2], [3, 4]];  
console.log(arr[1][0]); // 3
