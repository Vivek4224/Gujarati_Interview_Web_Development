
1. JavaScript માં Array શું છે?  
Array એ એક ડેટા સ્ટ્રક્ચર છે જેનો ઉપયોગ એક જ variable માં અનેક values સંગ્રહ કરવા માટે થાય છે. આ values કોઈપણ ડેટા ટાઈપની હોઈ શકે છે.

const arr = [1, "apple", true];



2. How do you create an array in JavaScript?
You can create an array in two ways:
1. Using array literal syntax:
   const arr = [1, 2, 3];
  
2. Using the `Array` constructor:
   const arr = new Array(1, 2, 3);
   


3. How do you access elements in an array?
Use the index, which starts at `0`:
```javascript
const arr = [10, 20, 30];
console.log(arr[1]); // 20
```


4. How do you add an element to an array?
1. Add at the end using `push()`:
   arr.push(4); // Adds 4 at the end
  
2. Add at the beginning using `unshift()`:
   arr.unshift(0); // Adds 0 at the beginning
   


5. How do you remove elements from an array?
1. Remove from the end using `pop()`:
   arr.pop(); // Removes the last element
   
2. Remove from the beginning using `shift()`:
  
   arr.shift(); // Removes the first element
   


6. How do you find the length of an array?
Using the `length` property:

const arr = [1, 2, 3];
console.log(arr.length); // 3



7. What is the `splice()` method?
It is used to add, remove, or replace elements in an array.


const arr = [1, 2, 3, 4];
arr.splice(1, 2, "a", "b"); // [1, "a", "b", 4]




8. What is the `slice()` method?
It creates a shallow copy of a portion of the array.

```javascript
const arr = [1, 2, 3, 4];
console.log(arr.slice(1, 3)); // [2, 3]
```

---

9. How do you find if an element exists in an array?
1. Using `includes()`:
  
   arr.includes(2); // true or false
   
2. Using `indexOf()`:
   
   arr.indexOf(2); // Returns index or -1 if not found
 

---

10. `map()` method શું છે?  
`map()` મેથડ એક નવું array બનાવે છે જે દરેક એલીમેન્ટ પર ફંક્શનને લાગુ કરીને તૈયાર થાય છે.

const arr = [1, 2, 3];
const doubled = arr.map(x => x * 2); // [2, 4, 6]


---

11. What is the `filter()` method?
It creates a new array with elements that satisfy a condition.


const arr = [1, 2, 3, 4];
const evens = arr.filter(x => x % 2 === 0); // [2, 4]


---

12. What is the `reduce()` method?
It reduces an array to a single value by applying a function cumulatively.

const arr = [1, 2, 3];
const sum = arr.reduce((acc, curr) => acc + curr, 0); // 6


---

13. How do you sort an array?
Using the `sort()` method:
```javascript
const arr = [3, 1, 2];
arr.sort(); // [1, 2, 3]
```
For numbers, use a comparator:
```javascript
arr.sort((a, b) => a - b);
```

---

14. How do you reverse an array?
Using the `reverse()` method:

const arr = [1, 2, 3];
arr.reverse(); // [3, 2, 1]


---

15. How do you concatenate two arrays?
Using the `concat()` method:

const arr1 = [1, 2];
const arr2 = [3, 4];
const combined = arr1.concat(arr2); // [1, 2, 3, 4]


---

16. How do you flatten a nested array?
Using the `flat()` method:

const arr = [1, [2, [3, 4]]];
console.log(arr.flat(2)); // [1, 2, 3, 4]

---

17. How do you convert an array to a string?
Using the `join()` method:

const arr = [1, 2, 3];
console.log(arr.join("-")); // "1-2-3"


---

18. How do you find the index of an element in an array?
Using the `indexOf()` method:

const arr = [1, 2, 3];
console.log(arr.indexOf(2)); // 1


---

19. What is the `find()` method?
It returns the first element that satisfies a condition:

const arr = [1, 2, 3];
const result = arr.find(x => x > 1); // 2


---

20. What is the `findIndex()` method?
It returns the index of the first element that satisfies a condition:

const arr = [1, 2, 3];
const result = arr.findIndex(x => x > 1); // 1


---

21. How do you check if all elements satisfy a condition?
Using the `every()` method:

const arr = [1, 2, 3];
arr.every(x => x > 0); // true


---

22. How do you check if some elements satisfy a condition?
Using the `some()` method:

const arr = [1, 2, 3];
arr.some(x => x > 2); // true


---

23. How do you create an array with a specific length?
Using the `Array` constructor:

const arr = new Array(5); // Creates an array with 5 empty slots


---

24. What is the `fill()` method?
It fills all elements in an array with a static value:

const arr = new Array(3).fill(0); // [0, 0, 0]


---

25. How do you iterate over an array?
Using a `for` loop, `for...of`, or `forEach()`:

const arr = [1, 2, 3];
arr.forEach(x => console.log(x));


---

26. What is the difference between `forEach()` and `map()`?
- `forEach()` executes a function for each element but does not return a new array.
- `map()` executes a function and returns a new array.

---

27. How do you remove duplicates from an array?
Using `Set`:

const arr = [1, 2, 2, 3];
const unique = [...new Set(arr)]; // [1, 2, 3]


---

28. How do you copy an array?
1. Using the spread operator:

   const copy = [...arr];
  
2. Using `slice()`:
   
   const copy = arr.slice();
   

---

29. How do you check if a variable is an array?
Using `Array.isArray()`:

Array.isArray(arr); // true


---

30. What is a multidimensional array?
An array containing other arrays:

const arr = [[1, 2], [3, 4]];
console.log(arr[1][0]); // 3

